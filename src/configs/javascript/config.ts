import type { TypedFlatConfigItem } from "#/types/type";
import globals from "globals";
import js from "@eslint/js";

export const javascript = (): TypedFlatConfigItem => {
  return {
    name: "bluzzi/javascript",
    languageOptions: {
      globals: {
        ...globals.browser,
        ...globals.es2021,
        ...globals.node,
        document: "readonly",
        navigator: "readonly",
        window: "readonly",
      },
      parserOptions: {
        ecmaFeatures: { jsx: true },
      },
    },
    linterOptions: {
      reportUnusedDisableDirectives: true,
    },
    rules: {
      ...js.configs.recommended.rules,
      "array-callback-return": "error",
      "no-await-in-loop": "error",
      "no-constructor-return": "error",
      "no-inner-declarations": "error",
      "no-promise-executor-return": "error",
      "no-self-compare": "error",
      "no-template-curly-in-string": "error",
      "no-unmodified-loop-condition": "error",
      "no-unreachable-loop": "error",
      "no-use-before-define": "error",
      "no-useless-assignment": "error",
      "default-case-last": "error",
      "eqeqeq": "error",
      "func-names": "error",
      "func-style": "error",
      "grouped-accessor-pairs": "error",
      "max-classes-per-file": "error",
      "max-depth": "error",
      "max-nested-callbacks": ["error", { max: 3 }],
      "new-cap": "off", // TODO: Check if this rule is relevant (this can be anoying with React)
      "no-array-constructor": "error",
      "no-caller": "error",
      "no-else-return": "error",
      "no-empty-function": "error",
      "no-eq-null": "error",
      "no-eval": "error",
      "no-implied-eval": "error",
      "no-extend-native": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "no-invalid-this": "error",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-multi-assign": "error",
      "no-multi-str": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-param-reassign": "off", // TODO: Check if this rule is relevant
      "no-plusplus": "error",
      "no-return-assign": "error",
      "no-script-url": "error",
      "no-sequences": "error",
      "no-undef-init": "error",
      "no-undefined": "off", // TODO: Check if this rule is relevant
      "no-unneeded-ternary": "error",
      "no-unused-expressions": "error",
      "no-useless-call": "error",
      "no-useless-computed-key": "error",
      "no-useless-constructor": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "prefer-arrow-callback": "error",
      "prefer-const": "error",
      "prefer-object-has-own": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "error",
      "require-unicode-regexp": "error",
      "yoda": "error",
      "no-duplicate-imports": "off", // TODO: Check if this rule is relevant
    },
  };
};
